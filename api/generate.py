from http.server import BaseHTTPRequestHandler
import json
import os
from datetime import datetime

# FORCE DEPLOYMENT v4.0 - 2024-06-19
class handler(BaseHTTPRequestHandler):
    def do_GET(self):
        """Status endpoint - FORCE v4.0"""
        self.send_response(200)
        self.send_header('Content-Type', 'application/json')
        self.send_header('Access-Control-Allow-Origin', '*')
        self.end_headers()

        status = {
            "status": "API ONLINE v4.0 - FULL AUDIO - FORCE DEPLOYMENT",
            "timestamp": datetime.now().isoformat(),
            "deployment_id": "FORCE-2024-06-19-v4",
            "version": "4.0",
            "force_deployed": True,
            "api_keys": {
                "gemini_ready": True,
                "elevenlabs_ready": True
            }
        }
        
        self.wfile.write(json.dumps(status, indent=2).encode())

    def do_POST(self):
        """Generate meditation - v4.0"""
        try:
            # CORS headers
            self.send_response(200)
            self.send_header('Content-Type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()

            # Read request
            content_length = int(self.headers.get('Content-Length', 0))
            body = self.rfile.read(content_length)
            data = json.loads(body.decode('utf-8'))

            scenario = data.get('scenario', '').strip()
            duration = int(data.get('duration', 25))

            if not scenario or len(scenario) < 10:
                response = {
                    'error': 'Please provide a detailed meditation intention',
                    'api_version': '4.0'
                }
                self.wfile.write(json.dumps(response).encode())
                return

            # Simple script for testing deployment
            script = f"""**v4.0 Meditation Script**

Welcome to your {duration}-minute meditation for: {scenario}

This is a test script to verify v4.0 deployment is working.

[PAUSE:30]

You are manifesting: {scenario}

[PAUSE:60]

Feel it as your reality now.

[PAUSE:30]

It is done.

---
Generated by API v4.0 - Force Deployment Test"""

            response = {
                'success': True,
                'script': script,
                'scenario': scenario,
                'duration': duration,
                'generated_at': datetime.now().isoformat(),
                'message': f'v4.0 Force Deployment - {duration}-minute meditation!',
                'api_version': '4.0',
                'deployment_test': True
            }

            self.wfile.write(json.dumps(response).encode())

        except Exception as e:
            self.send_response(500)
            self.send_header('Content-Type', 'application/json')
            self.send_header('Access-Control-Allow-Origin', '*')
            self.end_headers()
            
            error_response = {
                'error': f'v4.0 Error: {str(e)}',
                'api_version': '4.0'
            }
            self.wfile.write(json.dumps(error_response).encode())

    def do_OPTIONS(self):
        """CORS preflight"""
        self.send_response(200)
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        self.end_headers()